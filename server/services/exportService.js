import PDFDocument from 'pdfkit'
import axios from 'axios'

export const generatePDF = async (portfolio, user) => {
  return new Promise((resolve, reject) => {
    try {
      const doc = new PDFDocument({ margin: 50 })
      const chunks = []

      doc.on('data', chunk => chunks.push(chunk))
      doc.on('end', () => resolve(Buffer.concat(chunks)))
      doc.on('error', reject)

      // Add header
      doc.fontSize(24)
        .text(portfolio.title, { align: 'center' })
        .moveDown(0.5)

      doc.fontSize(12)
        .text(`Generated by ${user.profile.firstName} ${user.profile.lastName}`, { align: 'center' })
        .moveDown(2)

      // Add sections
      portfolio.sections.forEach(section => {
        if (section.isVisible && section.data) {
          doc.fontSize(18)
            .text(section.data.title || `Section ${section.order}`, { underline: true })
            .moveDown(0.5)

          doc.fontSize(12)
          if (section.data.content) {
            doc.text(section.data.content)
          }
          if (section.data.description) {
            doc.text(section.data.description)
          }

          doc.moveDown(1.5)
        }
      })

      // Add footer
      doc.fontSize(10)
        .text(`Generated from E-Folio on ${new Date().toLocaleDateString()}`, { align: 'center' })

      doc.end()
    } catch (error) {
      reject(error)
    }
  })
}

export const generateStaticSite = async (portfolio, user) => {
  // This would generate a complete static HTML site
  // For now, return a simple HTML structure
  const html = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${portfolio.title}</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            margin: 0; 
            padding: 0; 
            line-height: 1.6;
        }
        .container { 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 20px; 
        }
        .section { 
            margin-bottom: 40px; 
        }
        .section-title { 
            color: ${portfolio.styles.colors.primary}; 
            border-bottom: 2px solid ${portfolio.styles.colors.primary}; 
            padding-bottom: 10px; 
        }
    </style>
</head>
<body>
    <div class="container">
        <header style="text-align: center; margin-bottom: 40px;">
            <h1>${portfolio.title}</h1>
            <p>Portfolio of ${user.profile.firstName} ${user.profile.lastName}</p>
        </header>
        
        ${portfolio.sections.map(section => `
            <div class="section">
                <h2 class="section-title">${section.data.title || `Section ${section.order}`}</h2>
                ${section.data.content ? `<p>${section.data.content}</p>` : ''}
                ${section.data.description ? `<p>${section.data.description}</p>` : ''}
            </div>
        `).join('')}
        
        <footer style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #ccc;">
            <p>Generated by E-Folio</p>
        </footer>
    </div>
</body>
</html>
  `

  return Buffer.from(html)
}